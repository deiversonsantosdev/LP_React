{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deive\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\LP_React_v.1-main\\\\src\\\\components\\\\pages\\\\Register\\\\Register.js\";\nimport React from 'react';\nimport './Register';\nimport '../../../App';\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from 'yup';\nimport CookieConsent from \"react-cookie-consent\";\n/* Validação feita com yup */\n\nconst schema = Yup.object().shape({\n  name: Yup.string(\"*Necessário preencher o campo nome!\").required(\"*Preenchimento obrigatório!\").min(3, \"Erro: O nome deve ter no mínimo 3 caracteres!\").required(\"*Preenchimento obrigatório!\"),\n  cpf: Yup.string(\"Erro: Necessário preencher o campo CPF!\").required('*Preenchimento obrigatório!').min(11, \"O CPF deve ter no mínimo 11 caracteres!\").required('*Preenchimento obrigatório!').max(14, \"Erro: O CPF deve ter no máximo 14 caracteres!\")\n});\nexport default function Register() {\n  //RECEBER OS DADOS DO FORMULÁRIO\n\n  /*   const valueInput = e => setUser({ ...user, [e.target.name]: e.target.value });\n   */\n  //Enviar os dados para o back-end\n\n  /*  const enviar = async e => {\n     e.preventDefault();\n  */\n\n  /*     if (!(await validate())) return;\n   */\n\n  /* const saveDataForm = true;\n   if (saveDataForm) {\n    setStatus({\n      type: 'success',\n      mensagem: \"Cadastro realizado com sucesso!\"\n    });\n    setUser({\n      name: '',\n      email: '',\n      password: ''\n    });\n  } else {\n    setStatus({\n      type: 'error',\n      mensagem: \"Erro: Usuário não cadastrado com sucesso!\"\n    });\n  }\n  } */\n\n  /* API VIACEP CORREIOS */\n  function onSubmit(values, actions) {\n    console.log('SUBMIT', values);\n  }\n\n  function onBlurCep(ev, setFieldValue) {\n    const {\n      value\n    } = ev.target;\n    const cep = value === null || value === void 0 ? void 0 : value.replace(/[^0-9]/g, '');\n    /* REMOVEDOR DE CARACTERES = substitui por vazio, qualquer caractere diferente entre os números de 0-9 */\n\n    if ((cep === null || cep === void 0 ? void 0 : cep.length) !== 8) {\n      return;\n    }\n    /* utilizei a API fetch para reproduzir as funcionalidades do axios  */\n\n\n    fetch(`https://viacep.com.br/ws/${cep}/json/`).then(res => res.json()).then(data => {\n      setFieldValue('logradouro', data.logradouro);\n      setFieldValue('bairro', data.bairro);\n      setFieldValue('cidade', data.localidade);\n      setFieldValue('uf', data.uf);\n    });\n  }\n  /* COR DE FUNDO DA PÁGINA BASEADO NAS CORES DA TELA */\n\n\n  document.body.style.backgroundColor = 'hsl(75, 64%, 62%)';\n  /* Armazenar localStorage */\n\n  function enviar() {\n    localStorage.setItem(\"name\", document.querySelector(\"#name\").value);\n    localStorage.setItem(\"nasc\", document.querySelector(\"#nasc\").value);\n    localStorage.setItem(\"cpf\", document.querySelector(\"#cpf\").value);\n    localStorage.setItem(\"cep\", document.querySelector(\"#cep\").value);\n    localStorage.setItem(\"logradouro\", document.querySelector(\"#logradouro\").value);\n    localStorage.setItem(\"numero\", document.querySelector(\"#numero\").value);\n    localStorage.setItem(\"complemento\", document.querySelector(\"#complemento\").value);\n    localStorage.setItem(\"bairro\", document.querySelector(\"#bairro\").value);\n    localStorage.setItem(\"cidade\", document.querySelector(\"#cidade\").value);\n    localStorage.setItem(\"estado\", document.querySelector(\"#estado\").value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"background_register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    validationSchema: schema,\n    onSubmit: onSubmit,\n    validateOnMount: true,\n    initialValues: {\n      cep: '',\n      logradouro: '',\n      numero: '',\n      complemento: '',\n      bairro: '',\n      cidade: '',\n      uf: '',\n      name: '',\n      cpf: ''\n    },\n    render: _ref => {\n      let {\n        setFieldValue,\n        errors\n      } = _ref;\n      return /*#__PURE__*/React.createElement(Form, {\n        onSubmit: enviar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"register_cadastro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, \"REGISTRE-SE\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"name\",\n        className: \"h1register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, \"Nome\"), /*#__PURE__*/React.createElement(Field, {\n        id: \"name\",\n        className: \"name_cadastro borda_barra\",\n        name: \"name\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }), errors.name && /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 32\n        }\n      }, errors.name), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"nasc\",\n        className: \"h1register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, \"Data de Nascimento\"), /*#__PURE__*/React.createElement(Field, {\n        id: \"nasc\",\n        className: \"name_date borda_barra\",\n        name: \"nasc\",\n        type: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"cpf\",\n        className: \"h1register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, \"CPF\"), /*#__PURE__*/React.createElement(Field, {\n        id: \"cpf\",\n        className: \" borda_barra\",\n        name: \"cpf\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }), errors.cpf && /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 31\n        }\n      }, errors.cpf), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"cep\",\n        className: \"h1register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, \"CEP\"), /*#__PURE__*/React.createElement(Field, {\n        id: \"cep\",\n        className: \" borda_barra\",\n        name: \"cep\",\n        type: \"text\",\n        onBlur: ev => onBlurCep(ev, setFieldValue),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }\n      }, \"*Utilize apenas n\\xFAmeros ex: 01001000 \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"logradouro\",\n        className: \"h1register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }, \"Logradouro\"), /*#__PURE__*/React.createElement(Field, {\n        id: \"logradouro\",\n        className: \"name_cep borda_barra\",\n        name: \"logradouro\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }\n      }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"numero\",\n        className: \"h1register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }, \"N\\xFAmero\"), /*#__PURE__*/React.createElement(Field, {\n        id: \"numero\",\n        className: \" borda_barra\",\n        name: \"numero\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }\n      }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"complemento\",\n        className: \"h1register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, \"Complemento\"), /*#__PURE__*/React.createElement(Field, {\n        id: \"complemento\",\n        className: \"name_complemento borda_barra\",\n        name: \"complemento\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"bairro\",\n        className: \"h1register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }\n      }, \"Bairro\"), /*#__PURE__*/React.createElement(Field, {\n        id: \"bairro\",\n        className: \" borda_barra\",\n        name: \"bairro\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"cidade\",\n        className: \"h1register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, \"Cidade\"), /*#__PURE__*/React.createElement(Field, {\n        id: \"cidade\",\n        className: \" borda_barra\",\n        name: \"cidade\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"estado\",\n        className: \"h1register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      }, \"Estado\"), /*#__PURE__*/React.createElement(Field, {\n        id: \"estado\",\n        className: \"name_estado borda_barra\",\n        name: \"uf\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }\n      }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: \"enviar()\",\n        id: \"enviar\",\n        className: \"btn_cadastro\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }\n      }, \"Enviar\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(CookieConsent, {\n        debug: true,\n        buttonText: \"Eu Aceito\",\n        expires: 365\n        /* quantidde de dias para expiração de um cookie */\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      }, \" Utilizamos cookies essenciais e tecnologias semelhantes de acordo com a nossa \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 95\n        }\n      }, \"Pol\\xEDtica de Privacidade\"), \" e, ao continuar navegando, voc\\xEA concorda com estas condi\\xE7\\xF5es.\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/deive/OneDrive/Área de Trabalho/LP_React_v.1-main/src/components/pages/Register/Register.js"],"names":["React","Formik","Field","Form","Yup","CookieConsent","schema","object","shape","name","string","required","min","cpf","max","Register","onSubmit","values","actions","console","log","onBlurCep","ev","setFieldValue","value","target","cep","replace","length","fetch","then","res","json","data","logradouro","bairro","localidade","uf","document","body","style","backgroundColor","enviar","localStorage","setItem","querySelector","numero","complemento","cidade","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Register';\nimport '../../../App'\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from 'yup';\nimport CookieConsent from \"react-cookie-consent\"\n\n\n/* Validação feita com yup */\nconst schema = Yup.object().shape({\n  name: Yup.string(\"*Necessário preencher o campo nome!\").required(\"*Preenchimento obrigatório!\")\n    .min(3, \"Erro: O nome deve ter no mínimo 3 caracteres!\")\n    .required(\"*Preenchimento obrigatório!\"),\n\n  cpf: Yup.string(\"Erro: Necessário preencher o campo CPF!\")\n    .required('*Preenchimento obrigatório!')\n    .min(11, \"O CPF deve ter no mínimo 11 caracteres!\")\n    .required('*Preenchimento obrigatório!')\n    .max(14, \"Erro: O CPF deve ter no máximo 14 caracteres!\")\n})\n\n\nexport default function Register() {\n\n\n  //RECEBER OS DADOS DO FORMULÁRIO\n  /*   const valueInput = e => setUser({ ...user, [e.target.name]: e.target.value });\n   */\n  //Enviar os dados para o back-end\n  /*  const enviar = async e => {\n     e.preventDefault();\n  */\n  /*     if (!(await validate())) return;\n   */\n  /* const saveDataForm = true;\n\n  if (saveDataForm) {\n    setStatus({\n      type: 'success',\n      mensagem: \"Cadastro realizado com sucesso!\"\n    });\n    setUser({\n      name: '',\n      email: '',\n      password: ''\n    });\n  } else {\n    setStatus({\n      type: 'error',\n      mensagem: \"Erro: Usuário não cadastrado com sucesso!\"\n    });\n  }\n} */\n\n\n  /* API VIACEP CORREIOS */\n  function onSubmit(values, actions) {\n    console.log('SUBMIT', values);\n  }\n\n  function onBlurCep(ev, setFieldValue) {\n    const { value } = ev.target;\n\n    const cep = value?.replace(/[^0-9]/g, ''); /* REMOVEDOR DE CARACTERES = substitui por vazio, qualquer caractere diferente entre os números de 0-9 */\n\n    if (cep?.length !== 8) {\n      return;\n    }\n\n\n    /* utilizei a API fetch para reproduzir as funcionalidades do axios  */\n    fetch(`https://viacep.com.br/ws/${cep}/json/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setFieldValue('logradouro', data.logradouro);\n        setFieldValue('bairro', data.bairro);\n        setFieldValue('cidade', data.localidade);\n        setFieldValue('uf', data.uf);\n      });\n  }\n\n\n  /* COR DE FUNDO DA PÁGINA BASEADO NAS CORES DA TELA */\n  document.body.style.backgroundColor = 'hsl(75, 64%, 62%)';\n\n\n  /* Armazenar localStorage */\n  function enviar() {\n    localStorage.setItem(\"name\", document.querySelector(\"#name\").value);\n    localStorage.setItem(\"nasc\", document.querySelector(\"#nasc\").value);\n    localStorage.setItem(\"cpf\", document.querySelector(\"#cpf\").value);\n    localStorage.setItem(\"cep\", document.querySelector(\"#cep\").value);\n    localStorage.setItem(\"logradouro\", document.querySelector(\"#logradouro\").value);\n    localStorage.setItem(\"numero\", document.querySelector(\"#numero\").value);\n    localStorage.setItem(\"complemento\", document.querySelector(\"#complemento\").value);\n    localStorage.setItem(\"bairro\", document.querySelector(\"#bairro\").value);\n    localStorage.setItem(\"cidade\", document.querySelector(\"#cidade\").value);\n    localStorage.setItem(\"estado\", document.querySelector(\"#estado\").value);\n\n  }\n\n  return (\n\n    <div className='background_register'>\n      <div className=\"formulario\">\n\n\n        {/* utilizei  Formik para facilitar o uso de formulários em react*/}\n        <Formik\n          validationSchema={schema}\n          onSubmit={onSubmit}\n          validateOnMount\n          initialValues={{\n            cep: '',\n            logradouro: '',\n            numero: '',\n            complemento: '',\n            bairro: '',\n            cidade: '',\n            uf: '',\n            name: '',\n            cpf: '',\n          }}\n          render={({ setFieldValue, errors }) => (\n\n\n            <Form onSubmit={enviar} >\n              <label className='register_cadastro'>REGISTRE-SE</label>\n              <br></br>\n\n              <label htmlFor=\"name\" className='h1register'>Nome</label>\n              <Field id=\"name\" className='name_cadastro borda_barra' name=\"name\" type=\"text\" />\n              <br></br>\n              {errors.name && (<small>{errors.name}</small>)}\n              <br></br>  <br></br>\n\n              <label htmlFor=\"nasc\" className='h1register'>Data de Nascimento</label>\n              <Field id=\"nasc\" className='name_date borda_barra' name=\"nasc\" type=\"date\" />\n\n              <br></br>  <br></br>\n\n              <label htmlFor=\"cpf\" className='h1register'>CPF</label>\n              <Field id=\"cpf\" className=' borda_barra' name=\"cpf\" type=\"text\" />\n              <br></br>\n              {errors.cpf && (<small>{errors.cpf}</small>)}\n\n              <br></br>  <br></br>\n\n              <label htmlFor=\"cep\" className='h1register'>CEP</label>\n              <Field id=\"cep\" className=' borda_barra' name=\"cep\" type=\"text\" onBlur={(ev) => onBlurCep(ev, setFieldValue)} />\n              <br></br>\n              <small>*Utilize apenas números ex: 01001000 </small>\n              <br></br>  <br></br>\n\n              <label htmlFor=\"logradouro\" className='h1register'>Logradouro</label>\n              <Field id=\"logradouro\" className='name_cep borda_barra' name=\"logradouro\" type=\"text\" />\n              <br></br>  <br></br>\n\n              <label htmlFor=\"numero\" className='h1register'>Número</label>\n              <Field id=\"numero\" className=' borda_barra' name=\"numero\" type=\"text\" />\n              <br></br>  <br></br>\n\n              <label htmlFor=\"complemento\" className='h1register'>Complemento</label>\n              <Field id=\"complemento\" className='name_complemento borda_barra' name=\"complemento\" type=\"text\" />\n              <br></br>  <br></br>\n\n              <label htmlFor=\"bairro\" className='h1register'>Bairro</label>\n              <Field id=\"bairro\" className=' borda_barra' name=\"bairro\" type=\"text\" />\n              <br></br>  <br></br>\n\n              <label htmlFor=\"cidade\" className='h1register'>Cidade</label>\n              <Field id=\"cidade\" className=' borda_barra' name=\"cidade\" type=\"text\" />\n              <br></br>  <br></br>\n\n              <label htmlFor=\"estado\" className='h1register'>Estado</label>\n              <Field id=\"estado\" className='name_estado borda_barra' name=\"uf\" type=\"text\" />\n              <br></br>  <br></br>\n\n              <button onClick=\"enviar()\" id='enviar' className=\"btn_cadastro\" type='text'>Enviar</button>\n\n              <br></br> <br></br>\n              {/*  {status.type === 'success' ? <p style={{ color: \"hsl(75, 64%, 62%)\" }}>{status.mensagem}</p> : \"\"}\n              {status.type === 'error' ? <p style={{ color: \"#ff0000\" }}>{status.mensagem}</p> : \"\"}\n */}\n              <CookieConsent\n                debug={true}\n                buttonText={\"Eu Aceito\"}\n                expires={365} /* quantidde de dias para expiração de um cookie */\n              > Utilizamos cookies essenciais e tecnologias semelhantes de acordo com a nossa <a href=\"/register\">Política de Privacidade</a> e, ao continuar navegando, você concorda com estas condições.\n              </CookieConsent>\n            </Form>\n\n          )}\n        />\n      </div>\n    </div>\n\n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}